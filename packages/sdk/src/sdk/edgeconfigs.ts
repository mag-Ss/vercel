/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { edgeConfigsCreate } from "../funcs/edgeConfigsCreate.js";
import { edgeConfigsCreateToken } from "../funcs/edgeConfigsCreateToken.js";
import { edgeConfigsDelete } from "../funcs/edgeConfigsDelete.js";
import { edgeConfigsDeleteSchema } from "../funcs/edgeConfigsDeleteSchema.js";
import { edgeConfigsDeleteTokens } from "../funcs/edgeConfigsDeleteTokens.js";
import { edgeConfigsGet } from "../funcs/edgeConfigsGet.js";
import { edgeConfigsGetItem } from "../funcs/edgeConfigsGetItem.js";
import { edgeConfigsGetItems } from "../funcs/edgeConfigsGetItems.js";
import { edgeConfigsGetSchema } from "../funcs/edgeConfigsGetSchema.js";
import { edgeConfigsGetToken } from "../funcs/edgeConfigsGetToken.js";
import { edgeConfigsGetTokens } from "../funcs/edgeConfigsGetTokens.js";
import { edgeConfigsList } from "../funcs/edgeConfigsList.js";
import { edgeConfigsUpdate } from "../funcs/edgeConfigsUpdate.js";
import { edgeConfigsUpdateSchema } from "../funcs/edgeConfigsUpdateSchema.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import { EdgeConfigItem } from "../models/components/edgeconfigitem.js";
import { EdgeConfigToken } from "../models/components/edgeconfigtoken.js";
import {
  CreateEdgeConfigRequest,
  CreateEdgeConfigResponseBody,
} from "../models/operations/createedgeconfig.js";
import {
  CreateEdgeConfigTokenRequest,
  CreateEdgeConfigTokenResponseBody,
} from "../models/operations/createedgeconfigtoken.js";
import { DeleteEdgeConfigRequest } from "../models/operations/deleteedgeconfig.js";
import { DeleteEdgeConfigSchemaRequest } from "../models/operations/deleteedgeconfigschema.js";
import { DeleteEdgeConfigTokensRequest } from "../models/operations/deleteedgeconfigtokens.js";
import {
  GetEdgeConfigRequest,
  GetEdgeConfigResponseBody,
} from "../models/operations/getedgeconfig.js";
import { GetEdgeConfigItemRequest } from "../models/operations/getedgeconfigitem.js";
import { GetEdgeConfigItemsRequest } from "../models/operations/getedgeconfigitems.js";
import {
  GetEdgeConfigsRequest,
  GetEdgeConfigsResponseBody,
} from "../models/operations/getedgeconfigs.js";
import {
  GetEdgeConfigSchemaRequest,
  GetEdgeConfigSchemaResponseBody,
} from "../models/operations/getedgeconfigschema.js";
import { GetEdgeConfigTokenRequest } from "../models/operations/getedgeconfigtoken.js";
import { GetEdgeConfigTokensRequest } from "../models/operations/getedgeconfigtokens.js";
import {
  PatchEdgeConfigSchemaRequest,
  PatchEdgeConfigSchemaResponseBody,
} from "../models/operations/patchedgeconfigschema.js";
import {
  UpdateEdgeConfigRequest,
  UpdateEdgeConfigResponseBody,
} from "../models/operations/updateedgeconfig.js";
import { unwrapAsync } from "../types/fp.js";

export class EdgeConfigs extends ClientSDK {
  /**
   * Get Edge Configs
   *
   * @remarks
   * Returns all Edge Configs.
   */
  async list(
    request: GetEdgeConfigsRequest,
    options?: RequestOptions,
  ): Promise<Array<GetEdgeConfigsResponseBody>> {
    return unwrapAsync(edgeConfigsList(
      this,
      request,
      options,
    ));
  }

  /**
   * Create an Edge Config
   *
   * @remarks
   * Creates an Edge Config.
   */
  async create(
    request: CreateEdgeConfigRequest,
    options?: RequestOptions,
  ): Promise<CreateEdgeConfigResponseBody> {
    return unwrapAsync(edgeConfigsCreate(
      this,
      request,
      options,
    ));
  }

  /**
   * Get an Edge Config
   *
   * @remarks
   * Returns an Edge Config.
   */
  async get(
    request: GetEdgeConfigRequest,
    options?: RequestOptions,
  ): Promise<GetEdgeConfigResponseBody> {
    return unwrapAsync(edgeConfigsGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Update an Edge Config
   *
   * @remarks
   * Updates an Edge Config.
   */
  async update(
    request: UpdateEdgeConfigRequest,
    options?: RequestOptions,
  ): Promise<UpdateEdgeConfigResponseBody> {
    return unwrapAsync(edgeConfigsUpdate(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete an Edge Config
   *
   * @remarks
   * Delete an Edge Config by id.
   */
  async delete(
    request: DeleteEdgeConfigRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(edgeConfigsDelete(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Edge Config items
   *
   * @remarks
   * Returns all items of an Edge Config.
   */
  async getItems(
    request: GetEdgeConfigItemsRequest,
    options?: RequestOptions,
  ): Promise<EdgeConfigItem> {
    return unwrapAsync(edgeConfigsGetItems(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Edge Config schema
   *
   * @remarks
   * Returns the schema of an Edge Config.
   */
  async getSchema(
    request: GetEdgeConfigSchemaRequest,
    options?: RequestOptions,
  ): Promise<GetEdgeConfigSchemaResponseBody> {
    return unwrapAsync(edgeConfigsGetSchema(
      this,
      request,
      options,
    ));
  }

  /**
   * Update Edge Config schema
   *
   * @remarks
   * Update an Edge Config's schema.
   */
  async updateSchema(
    request: PatchEdgeConfigSchemaRequest,
    options?: RequestOptions,
  ): Promise<PatchEdgeConfigSchemaResponseBody> {
    return unwrapAsync(edgeConfigsUpdateSchema(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete an Edge Config's schema
   *
   * @remarks
   * Deletes the schema of existing Edge Config.
   */
  async deleteSchema(
    request: DeleteEdgeConfigSchemaRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(edgeConfigsDeleteSchema(
      this,
      request,
      options,
    ));
  }

  /**
   * Get an Edge Config item
   *
   * @remarks
   * Returns a specific Edge Config Item.
   */
  async getItem(
    request: GetEdgeConfigItemRequest,
    options?: RequestOptions,
  ): Promise<EdgeConfigItem> {
    return unwrapAsync(edgeConfigsGetItem(
      this,
      request,
      options,
    ));
  }

  /**
   * Get all tokens of an Edge Config
   *
   * @remarks
   * Returns all tokens of an Edge Config.
   */
  async getTokens(
    request: GetEdgeConfigTokensRequest,
    options?: RequestOptions,
  ): Promise<EdgeConfigToken> {
    return unwrapAsync(edgeConfigsGetTokens(
      this,
      request,
      options,
    ));
  }

  /**
   * Delete one or more Edge Config tokens
   *
   * @remarks
   * Deletes one or more tokens of an existing Edge Config.
   */
  async deleteTokens(
    request: DeleteEdgeConfigTokensRequest,
    options?: RequestOptions,
  ): Promise<void> {
    return unwrapAsync(edgeConfigsDeleteTokens(
      this,
      request,
      options,
    ));
  }

  /**
   * Get Edge Config token meta data
   *
   * @remarks
   * Return meta data about an Edge Config token.
   */
  async getToken(
    request: GetEdgeConfigTokenRequest,
    options?: RequestOptions,
  ): Promise<EdgeConfigToken> {
    return unwrapAsync(edgeConfigsGetToken(
      this,
      request,
      options,
    ));
  }

  /**
   * Create an Edge Config token
   *
   * @remarks
   * Adds a token to an existing Edge Config.
   */
  async createToken(
    request: CreateEdgeConfigTokenRequest,
    options?: RequestOptions,
  ): Promise<CreateEdgeConfigTokenResponseBody> {
    return unwrapAsync(edgeConfigsCreateToken(
      this,
      request,
      options,
    ));
  }
}
