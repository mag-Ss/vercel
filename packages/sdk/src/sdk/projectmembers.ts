/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { projectMembersAdd } from "../funcs/projectMembersAdd.js";
import { projectMembersGet } from "../funcs/projectMembersGet.js";
import { projectMembersRemove } from "../funcs/projectMembersRemove.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import {
  AddProjectMemberRequest,
  AddProjectMemberResponseBody,
} from "../models/operations/addprojectmember.js";
import {
  GetProjectMembersRequest,
  GetProjectMembersResponseBody,
} from "../models/operations/getprojectmembers.js";
import {
  RemoveProjectMemberRequest,
  RemoveProjectMemberResponseBody,
} from "../models/operations/removeprojectmember.js";
import { unwrapAsync } from "../types/fp.js";

export class ProjectMembers extends ClientSDK {
  /**
   * List project members
   *
   * @remarks
   * Lists all members of a project.
   */
  async get(
    request: GetProjectMembersRequest,
    options?: RequestOptions,
  ): Promise<GetProjectMembersResponseBody> {
    return unwrapAsync(projectMembersGet(
      this,
      request,
      options,
    ));
  }

  /**
   * Adds a new member to a project.
   *
   * @remarks
   * Adds a new member to the project.
   */
  async add(
    request: AddProjectMemberRequest,
    options?: RequestOptions,
  ): Promise<AddProjectMemberResponseBody> {
    return unwrapAsync(projectMembersAdd(
      this,
      request,
      options,
    ));
  }

  /**
   * Remove a Project Member
   *
   * @remarks
   * Remove a member from a specific project
   */
  async remove(
    request: RemoveProjectMemberRequest,
    options?: RequestOptions,
  ): Promise<RemoveProjectMemberResponseBody> {
    return unwrapAsync(projectMembersRemove(
      this,
      request,
      options,
    ));
  }
}
